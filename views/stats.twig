{% extends 'components/layout.twig' %} {% block body %}

<body>
    <!---->
    {% include "/sections/about/stats/heading.twig" %}
    <!---->

    <div class="container" style="padding-bottom: 25px;">
        <div class="layout-specing" style="margin-top:25px;">
            <div class="row">
                <div class="col-lg-12">
                    <ul class="nav nav-pills nav-justified flex-column flex-sm-row rounded" id="pills-tab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link rounded active" id="pills-mainnet-tab" data-bs-toggle="pill" href="#pills-mainnet" role="tab" aria-controls="pills-mainnet" aria-selected="false">
                                <div class="text-center py-2">
                                    <h6 class="mb-0">Mainnet</h6>
                                </div>
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link rounded" id="pills-bep20-tab" data-bs-toggle="pill" href="#pills-bep20" role="tab" aria-controls="pills-bep20" aria-selected="false">
                                <div class="text-center py-2">
                                    <h6 class="mb-0">BEP-20</h6>
                                </div>
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link rounded" id="pills-erc20-tab" data-bs-toggle="pill" href="#pills-erc20" role="tab" aria-controls="pills-erc20" aria-selected="false">
                                <div class="text-center py-2">
                                    <h6 class="mb-0">ERC-20</h6>
                                </div>
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link rounded" id="pills-foundation-tab" data-bs-toggle="pill" href="#pills-foundation" role="tab" aria-controls="pills-foundation" aria-selected="false">
                                <div class="text-center py-2">
                                    <h6 class="mb-0">Foundation</h6>
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="row pt-3">
                <div class="col-12">

                    <div class="tab-content" id="pills-tabContent">
                        <div class="tab-pane fade show active" id="pills-mainnet" role="tabpanel" aria-labelledby="pills-mainnet-tab">
                            {% include "/sections/about/stats/mainnet-stats.twig" %}
                        </div>

                        <div class="tab-pane fade show" id="pills-erc20" role="tabpanel" aria-labelledby="pills-erc20-tab">
                            {% include "/sections/about/stats/erc20-stats.twig" %}
                        </div>

                        <div class="tab-pane fade" id="pills-bep20" role="tabpanel" aria-labelledby="pills-bep20-tab">
                            {% include "/sections/about/stats/bep20-stats.twig" %}
                        </div>

                        <div class="tab-pane fade" id="pills-foundation" role="tabpanel" aria-labelledby="pills-foundation-tab">
                            {% include "/sections/about/stats/foundation-stats.twig" %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</body>
{% endblock %}
<!---->

{% block javascripts %}


<!---->
{% include "sections/about/about-solar/scripts.twig" %}
<script src="assets/js/jquery-3.3.1.min.js"></script>
<script src="assets/js/jquery-ui.min.js"></script>
<script src="assets/js/socket.io.slim.js"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script type="text/javascript">
    $(document).ready(function() {
        const socket = io();
        socket.emit('getwallet', {
            walletId: 'Sdao2USyAz9B6RBgZeFyNDePuQAxfzZZHE'
        });
        socket.on('showwallet', function(data) {
            $('#balance').html(parseInt(data.balance).toLocaleString() + ' SXP');
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function() {
        const socket = io();
        socket.emit('getBlockchainStats', {});
        socket.on('showBlockchainStats', function(data) {
            $('#c_supply').html(parseInt((data.supply / 1e8).toFixed(0)).toLocaleString());
            $('#unswapped').html(parseInt((data.unswapped).toFixed(0)).toLocaleString());
            $('#wallet_count').html(data.wallet_count.toLocaleString());
            $('#total_burned').html(parseInt((data.total_burned / 1e8).toFixed(0)).toLocaleString());
            $('#sxp_produced').html(parseInt((data.produced / 1e8).toFixed(0)).toLocaleString());
            $("#erc20_binance").html(`${parseInt((data.eth_binance_custody).toFixed(0)).toLocaleString()}%`)
            $("#bep20_binance").html(`${parseInt((data.bsc_binance_custody).toFixed(0)).toLocaleString()}%`)
            $("#erc20_otherexchanges").html(`${parseInt((data.eth_other_exchanges).toFixed(0)).toLocaleString()}%`)
            $("#bep20_otherexchanges").html(`${parseInt((data.bsc_other_exchanges).toFixed(0)).toLocaleString()}%`)
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function() {
        const socket = io();

        function loadHolders(elementId, data) {
            let erc20table = document.getElementById(elementId);
            let top10 = data.top_holders.reduce((pv, cv) => {
                return pv + cv.percentage;
            }, 0).toFixed(2)

            let swapped = data.top_holders.find(th => th.address == "0x71f7505a78fd1e044ebf38ab6876700a907fc53a" || th.address == "0x44cf30ea4e58818bfae4b8499be409cd4fdd5a20").percentage
            document.getElementById(`${elementId}_top`).innerHTML = `${top10}%`
            document.getElementById(`${elementId}_swapped`).innerHTML = `${parseFloat(swapped).toFixed(2)}%`
            data.top_holders.forEach(function(row) {
                tr = document.createElement("tr");

                th = document.createElement("th");
                th.innerHTML = `<a href="${elementId == "erc20"? 'https://etherscan.io/token/0x8ce9137d39326ad0cd6491fb5cc0cba0e089b6a9?a='+ row.address : 'https://bscscan.io/token/0x8ce9137d39326ad0cd6491fb5cc0cba0e089b6a9?a='+ row.address}">${row.label? row.label : row.address}</a>`;
                th.className = 'p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = `${(row.balance/1000000000000000000).toLocaleString()} SXP`;
                th.className = 'p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = `${row.percentage.toFixed(2)}%`;
                th.className = 'p-3'
                tr.appendChild(th);

                erc20table.appendChild(tr)
            });
        }
        socket.emit('getETHholders', {});
        socket.emit('getBSCholders', {});
        socket.on('showETHholders', function(data) {
            loadHolders('erc20', data)
        });
        socket.on('showBSCholders', function(data) {
            loadHolders('bep20', data)
        });
    });
</script>
<script>
    $(document).ready(function() {
        var socket = io();
        socket.emit('getWalletSent', {
            walletId: 'Sdao2USyAz9B6RBgZeFyNDePuQAxfzZZHE'
        });
        socket.on('showWalletSent', function(data) {
            var mainTable = document.getElementById("transactions");
            var tr,
                th;
            data.forEach(function(row) {
                tr = document.createElement("tr");

                th = document.createElement("th");
                th.innerHTML = row.nonce;
                th.className = 'p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = row.recipient;
                th.className = 'p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = parseInt((parseInt(row.amount) / 100000000).toFixed(0)).toLocaleString() + ' SXP';
                th.className = 'text-center p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = '<a target="_blank" name="external" onclick="confirmExit(this.name)" href="https://explorer.solar.org/transactions/' + row.id + '">' + row.memo.substr(0, 50) + '...' + '</a>';
                th.className = 'text-center p-3'
                tr.appendChild(th);

                th = document.createElement("th");
                th.innerHTML = row.timestamp;
                th.className = 'text-end p-3'
                tr.appendChild(th);

                mainTable.appendChild(tr);
            });

        });


    });
</script>
<script>
    $(document).ready(function() {
        var socket = io();
    socket.emit('getTxStats', {});
        socket.on('showTxStats', function(data) {
        var options = {
          series: [{
          name: "Daily Volume",
          data: Object.entries(data.transactions).map(([key, value]) => {return {y:value.volume/1e8, x: key.replaceAll("-","/")}}).reverse()
        }],
          chart: {
          type: 'area',
          stacked: false,
          stroke: {
  curve: 'smooth',
},
          height: 350,
          zoom: {
            type: 'x',
            enabled: true,
            autoScaleYaxis: true
          },
          toolbar: {
            autoSelected: 'zoom'
          }
        },
        dataLabels: {
          enabled: false
        },
        markers: {
          size: 0,
        },
        title: {
          text: 'Daily Volume in SXP since launch',
          align: 'left'
        },
        colors:['#ed5c15'],
        fill: {
          type: 'gradient',
          gradient: {
            shadeIntensity: 1,
            inverseColors: false,
            opacityFrom: 0.5,
            opacityTo: 0,
            stops: [0, 90, 100]
          },
        },
        yaxis: {
            type: 'category',
          labels: {
            formatter: function (val) {
                return `${val} SXP`;
            },
          },
          title: {
            text: 'Volume in SXP'
          },
        },
        xaxis: {
          type: 'datetime',
        },
        tooltip: {
          shared: false,
          y: {
            formatter: function (val) {
              
              return `${parseInt((val).toFixed(0)).toLocaleString()} SXP`;
            }
          }
        }
        };

        var chart = new ApexCharts(document.querySelector("#chart1"), options);
        chart.render();

        var options = {
          series: [{
            name: "Daily transfers",
          data: Object.entries(data.transactions).map(([key, value]) => {return {y:value.transfers, x: key.replaceAll("-","/")}}).reverse()
        }],
          chart: {
          type: 'area',
          stacked: false,
          height: 350,
          zoom: {
            type: 'x',
            enabled: true,
            autoScaleYaxis: true
          },
          toolbar: {
            autoSelected: 'zoom'
          }
        },
        dataLabels: {
          enabled: false
        },
        markers: {
          size: 0,
        },
        title: {
          text: 'Daily transfers since launch',
          align: 'left'
        },
        colors:['#ed5c15'],
        fill: {
          type: 'gradient',
          gradient: {
            shadeIntensity: 1,
            inverseColors: false,
            opacityFrom: 0.5,
            opacityTo: 0,
            stops: [0, 90, 100]
          },
        },
        yaxis: {
            type: 'category',
          labels: {
            formatter: function (val) {
              return val;
            },
          },
          title: {
            text: 'Daily transfers'
          },
        },
        xaxis: {
          type: 'datetime',
        },
        tooltip: {
          shared: false,
          y: {
            formatter: function (val) {
              return val;
            }
          }
        }
        };

        var chart = new ApexCharts(document.querySelector("#chart2"), options);
        chart.render();
        var options = {
          series: [{
            name: "Daily active usage",
          data: Object.entries(data.transactions).map(([key, value]) => {return {y:value.wallets, x: key.replaceAll("-","/")}}).reverse()
        }],
          chart: {
          type: 'area',
          stacked: false,
          height: 350,
          zoom: {
            type: 'x',
            enabled: true,
            autoScaleYaxis: true
          },
          toolbar: {
            autoSelected: 'zoom'
          }
        },
        dataLabels: {
          enabled: false
        },
        markers: {
          size: 0,
        },
        title: {
          text: 'Daily active usage since launch',
          align: 'left'
        },
        colors:['#ed5c15'],
        fill: {
          type: 'gradient',
          gradient: {
            shadeIntensity: 1,
            inverseColors: false,
            opacityFrom: 0.5,
            opacityTo: 0,
            stops: [0, 90, 100]
          },
        },
        yaxis: {
            type: 'category',
          labels: {
            formatter: function (val) {
              return val;
            },
          },
          title: {
            text: 'Daily active usage'
          },
        },
        xaxis: {
          type: 'datetime',

        },
        tooltip: {
          shared: false,
          y: {
            formatter: function (val) {
              return val;
            }
          }
        }
        };

        var chart = new ApexCharts(document.querySelector("#chart3"), options);
        chart.render();

        });
    });
</script>
<!---->
{% endblock %}